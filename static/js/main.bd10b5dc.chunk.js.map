{"version":3,"sources":["components/Card/Card.tsx","layouts/Planets/img/yoo.png","layouts/Planets/Planets.tsx","layouts/PlanetDetails/PlanetsDetails.tsx","components/Footer/Footer.tsx","routs/Routs.tsx","App.tsx","reportWebVitals.ts","index.tsx","layouts/PlanetDetails/PlanetDetails.module.css","layouts/Planets/Planets.module.css","components/Card/Card.module.css","components/Footer/Footer.module.css"],"names":["Card","props","name","climate","population","onClick","url","console","log","role","className","styles","container","titleContainer","content","Planets","planets","getMorePlanets","isPlanetsLoaded","history","useHistory","yodaContainer","src","yoda","alt","quote","listContainer","map","planet","pathname","push","state","buttonContainer","type","PlanetsDetails","useState","rotation_period","diameter","gravity","terrain","residents","height","mass","gender","planetDetails","setPlanetDetails","isDetailsLoaded","setIsDetailsLoaded","useLocation","a","getPlanet","length","Promise","all","residentUrl","getResidentsOfPlanet","details","error","fetch","planetResponse","json","residentsUrl","response","resident","useEffect","getPlanetsAndResidents","title","info","residentsContainer","menu","Item","overlay","placement","arrow","Footer","pageCounter","Routs","setPageCounter","setPlanets","setIsPlanetsLoaded","ok","results","status","message","getPlanets","exact","path","render","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"6SA8CeA,EAzCS,SAACC,GAAW,IAEhCC,EAKED,EALFC,KACAC,EAIEF,EAJFE,QACAC,EAGEH,EAHFG,WACAC,EAEEJ,EAFFI,QACAC,EACEL,EADFK,IAWF,OARAC,QAAQC,IAAI,CACVN,OACAC,UACAC,aACAC,UACAC,QAKA,cADF,CACE,OACEG,KAAK,SACLC,UAAWC,IAAOC,UAClBP,QAASA,EAHX,UAKE,qBAAKK,UAAWC,IAAOE,eAAvB,SAAwCX,IACxC,sBAAKQ,UAAWC,IAAOG,QAAvB,UACE,2CAEG,IACAX,KAEH,8CAEG,IACAC,YCvCI,MAA0B,gC,iBCqE1BW,EA3De,SAACd,GAAW,IAEtCe,EAGEf,EAHFe,QACAC,EAEEhB,EAFFgB,eACAC,EACEjB,EADFiB,gBAGIC,EAAUC,cAWhB,OACE,sBAAKV,UAAWC,IAAOC,UAAvB,UACE,sBAAKF,UAAWC,IAAOU,cAAvB,UACE,qBACEC,IAAKC,EACLC,IAAI,WAEN,qBAAKd,UAAWC,IAAOc,MAAvB,qHAKAP,EAEI,qBAAKR,UAAWC,IAAOe,cAAvB,SACGV,EAAQW,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CACEvB,QAAS,kBA1BQC,EA0BsBsB,EAAOtB,IA1BJuB,EA0BJ,kBAAwBD,EAAO1B,WAzBnFiB,EAAQW,KAAK,CACXD,WACAE,MAAO,CACLzB,SAJ0B,IAACA,EAAyBuB,GA4B1C3B,KAAM0B,EAAO1B,KACbC,QAASyB,EAAOzB,QAChBC,WAAYwB,EAAOxB,YAHdwB,EAAO1B,WAQlB,cAAC,IAAD,IAEN,qBAAKQ,UAAWC,IAAOqB,gBAAvB,SACE,cAAC,IAAD,CACE3B,QAASY,EACTgB,KAAK,UAFP,6B,4CC2GOC,EAvJQ,WAAO,IAAD,IACeC,mBAAS,CACjDjC,KAAM,GACNkC,gBAAiB,GACjBC,SAAU,GACVlC,QAAS,GACTmC,QAAS,GACTC,QAAS,GACTnC,WAAY,GACZoC,UAAW,CAAC,CACVtC,KAAM,GACNuC,OAAQ,GACRC,KAAM,GACNC,OAAQ,OAbe,mBACpBC,EADoB,KACLC,EADK,OAgBmBV,oBAAS,GAhB5B,mBAgBpBW,EAhBoB,KAgBHC,EAhBG,KAkBrBzC,EAAG,UADQ0C,cACIjB,aAAZ,aAAG,EAAgBzB,IAlBD,4CAoB3B,gCAAA2C,EAAA,sEAEIF,GAAmB,GAFvB,SAGyBG,IAHzB,UAGUtB,EAHV,OAIQY,EAA8B,GACF,IAA5BZ,EAAOY,UAAUW,OALzB,iCAMwBC,QAAQC,IACxBzB,EAAOY,UAAUb,KAAI,SAAC2B,GAAD,OAAyBC,EAAqBD,OAP3E,OAMMd,EANN,eAWUgB,EAAU,CACdtD,KAAM0B,EAAO1B,KACbkC,gBAAiBR,EAAOQ,gBACxBC,SAAUT,EAAOS,SACjBlC,QAASyB,EAAOzB,QAChBmC,QAASV,EAAOU,QAChBC,QAASX,EAAOW,QAChBnC,WAAYwB,EAAOxB,WACnBoC,aAGFK,EAAiBW,GACjBT,GAAmB,GAvBvB,kDAyBIxC,QAAQkD,MAAR,MAzBJ,2DApB2B,+BAiDZP,IAjDY,2EAiD3B,8BAAAD,EAAA,sEAC+BS,MAAMpD,GADrC,cACQqD,EADR,gBAEuBA,EAAeC,OAFtC,cAEQhC,EAFR,yBAISA,GAJT,4CAjD2B,+BAwDZ2B,EAxDY,8EAwD3B,WAAoCM,GAApC,iBAAAZ,EAAA,sEACyBS,MAAMG,GAD/B,cACQC,EADR,gBAEyBA,EAASF,OAFlC,cAEQG,EAFR,yBAISA,GAJT,4CAxD2B,sBAuE3B,OARAC,qBAAU,YA/DiB,mCAgEzBC,KACC,IAEH1D,QAAQC,IAAR,eACKoC,IAIH,qBAAKlC,UAAWC,IAAOC,UAAvB,SAEIkC,EAEI,sBAAKpC,UAAWC,IAAO6C,QAAvB,UACE,qBAAK9C,UAAWC,IAAOuD,MAAvB,SACGtB,EAAc1C,OAEjB,sBAAKQ,UAAWC,IAAOwD,KAAvB,6BAEG,IACAvB,EAAcR,mBAEjB,sBAAK1B,UAAWC,IAAOwD,KAAvB,sBAEG,IACAvB,EAAcP,YAEjB,sBAAK3B,UAAWC,IAAOwD,KAAvB,qBAEG,IACAvB,EAAczC,WAEjB,sBAAKO,UAAWC,IAAOwD,KAAvB,qBAEG,IACAvB,EAAcN,WAEjB,sBAAK5B,UAAWC,IAAOwD,KAAvB,qBAEG,IACAvB,EAAcL,WAEjB,sBAAK7B,UAAWC,IAAOwD,KAAvB,wBAEG,IACAvB,EAAcxC,cAEjB,qBAAKM,UAAWC,IAAOyD,mBAAvB,SACGxB,EAAcJ,UAAUb,KAAI,SAACoC,GAC5B,IAAMM,EACJ,eAAC,IAAD,WACE,eAAC,IAAKC,KAAN,qBAEG,IACAP,EAASpB,UAEZ,eAAC,IAAK2B,KAAN,qBAEG,IACAP,EAAStB,UAEZ,eAAC,IAAK6B,KAAN,mBAEG,IACAP,EAASrB,WAKhB,OACE,cAAC,IAAD,CACE6B,QAASF,EACTG,UAAU,eACVC,OAAK,EAHP,SAKE,cAAC,IAAD,UAASV,EAAS7D,iBAO5B,cAAC,IAAD,O,iBC3IGwE,EAda,SAACzE,GAAW,IAEpC0E,EACE1E,EADF0E,YAGF,OADApE,QAAQC,IAAI,cAAemE,GAEzB,sBAAKjE,UAAWC,IAAOC,UAAvB,mBAEG,IACA+D,MCsEQC,EA7ED,WAAO,IAAD,EACoBzC,mBAAS,GAD7B,mBACXwC,EADW,KACEE,EADF,OAGY1C,mBAAS,CAAC,CACtCjC,KAAM,GACNI,IAAK,GACLH,QAAS,GACTC,WAAY,MAPI,mBAGXY,EAHW,KAGF8D,EAHE,OAU4B3C,oBAAS,GAVrC,mBAUXjB,EAVW,KAUM6D,EAVN,iDAYlB,gCAAA9B,EAAA,sEAEI8B,GAAmB,GAFvB,SAG2BrB,MAAM,sCAAD,OAAuCiB,EAAc,IAHrF,YAGUb,EAHV,QAKiBkB,GALjB,iCAMgClB,EAASF,OANzC,gBAMcqB,EANd,EAMcA,QACRH,EAAW,YAAIG,IACfJ,EAAeF,EAAc,GAC7BI,GAAmB,GATzB,0DAYIxE,QAAQkD,MAAR,MACAsB,GAAmB,GAbvB,2DAZkB,+BA6BH9D,IA7BG,2EA6BlB,gCAAAgC,EAAA,+EAE2BS,MAAM,sCAAD,OAAuCiB,EAAc,IAFrF,UAI4B,OAFlBb,EAFV,QAIiBoB,OAJjB,gBAKMC,IAAQ1B,MAAM,kCALpB,2BAMeK,EAASkB,GANxB,kCAOgClB,EAASF,OAPzC,kBAOcqB,EAPd,EAOcA,UAEN1E,QAAQC,IAAI,cAEdsE,EAAW,GAAD,mBAAK9D,GAAL,YAAiBiE,KAC3BJ,EAAeF,EAAc,GAZnC,0DAeIpE,QAAQC,IAAI,QACZD,QAAQkD,MAAR,MAhBJ,2DA7BkB,sBAwDlB,OAPAO,qBAAU,WACJhD,EAAQmC,OAAS,IACnB5C,QAAQC,IAAI,kBAAmBQ,EAAQmC,QAnDzB,mCAoDdiC,MAED,IAGD,eAAC,IAAD,WACE,cAAC,EAAD,CAAQT,YAAaA,IACrB,eAAC,IAAD,WACE,cAAC,IAAD,CACEU,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACN,cAAC,EAAD,CACEvE,QAASA,EACTC,eAAgBA,EAChBC,gBAAiBA,OAIvB,cAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,gBAAgBE,UAAWtD,W,OClEtCuD,MARf,WACE,OACE,qBAAK/E,UAAU,MAAf,SACE,cAAC,EAAD,OCSSgF,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,mBCfAa,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,+BAA+B,MAAQ,6BAA6B,KAAO,4BAA4B,mBAAqB,4C,mBCArMD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,cAAgB,+BAA+B,gBAAkB,iCAAiC,cAAgB,+BAA+B,MAAQ,yB,mBCAlND,EAAOC,QAAU,CAAC,UAAY,wBAAwB,eAAiB,6BAA6B,QAAU,wB,mBCA9GD,EAAOC,QAAU,CAAC,UAAY,6B","file":"static/js/main.bd10b5dc.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { ICard } from './ICard';\n\nimport styles from './Card.module.css';\n\nconst Card: FC<ICard> = (props) => {\n  const {\n    name,\n    climate,\n    population,\n    onClick,\n    url,\n  } = props;\n\n  console.log({\n    name,\n    climate,\n    population,\n    onClick,\n    url,\n  });\n\n  return (\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/interactive-supports-focus\n    <div\n      role=\"button\"\n      className={styles.container}\n      onClick={onClick}\n    >\n      <div className={styles.titleContainer}>{name}</div>\n      <div className={styles.content}>\n        <div>\n          climate:\n          {' '}\n          {climate}\n        </div>\n        <div>\n          population:\n          {' '}\n          {population}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/yoo.8b1526ee.png\";","import React, { FC } from 'react';\nimport { useHistory } from 'react-router';\nimport { Spin, Button } from 'antd';\nimport Card from '../../components/Card/Card';\nimport yoda from './img/yoo.png';\n\nimport { IPlanets } from './IPlanets';\n\nimport styles from './Planets.module.css';\n\nconst Planets: FC<IPlanets> = (props) => {\n  const {\n    planets,\n    getMorePlanets,\n    isPlanetsLoaded,\n  } = props;\n\n  const history = useHistory();\n\n  const navigateToPlanetDetails = (url: string | undefined, pathname: string) => {\n    history.push({\n      pathname,\n      state: {\n        url,\n      },\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.yodaContainer}>\n        <img\n          src={yoda}\n          alt=\"master\"\n        />\n        <div className={styles.quote}>\n          “The dark side clouds everything. Impossible to see the light, the future is.” – Yoda\n        </div>\n      </div>\n      {\n        isPlanetsLoaded\n          ? (\n            <div className={styles.listContainer}>\n              {planets.map((planet) => (\n                <Card\n                  onClick={() => navigateToPlanetDetails(planet.url, `/planet/${planet.name}`)}\n                  key={planet.name}\n                  name={planet.name}\n                  climate={planet.climate}\n                  population={planet.population}\n                />\n              ))}\n            </div>\n          )\n          : <Spin />\n      }\n      <div className={styles.buttonContainer}>\n        <Button\n          onClick={getMorePlanets}\n          type=\"primary\"\n            // loading={!isPlanetsLoaded}\n        >\n          Load more\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Planets;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Spin, Menu, Dropdown, Button,\n} from 'antd';\nimport { useLocation } from 'react-router';\nimport { IResident } from './IResidents';\n\nimport styles from './PlanetDetails.module.css';\n\n interface IUseLocation {\n    url: string;\n}\n\nconst PlanetsDetails = () => {\n  const [planetDetails, setPlanetDetails] = useState({\n    name: '',\n    rotation_period: '',\n    diameter: '',\n    climate: '',\n    gravity: '',\n    terrain: '',\n    population: '',\n    residents: [{\n      name: '',\n      height: '',\n      mass: '',\n      gender: '',\n    }],\n  });\n  const [isDetailsLoaded, setIsDetailsLoaded] = useState(false);\n  const location = useLocation<IUseLocation>();\n  const url = location.state?.url;\n\n  async function getPlanetsAndResidents() {\n    try {\n      setIsDetailsLoaded(false);\n      const planet = await getPlanet();\n      let residents: Array<IResident> = [];\n      if (planet.residents.length !== 0) {\n        residents = await Promise.all(\n          planet.residents.map((residentUrl: string) => getResidentsOfPlanet(residentUrl)),\n        );\n      }\n\n      const details = {\n        name: planet.name,\n        rotation_period: planet.rotation_period,\n        diameter: planet.diameter,\n        climate: planet.climate,\n        gravity: planet.gravity,\n        terrain: planet.terrain,\n        population: planet.population,\n        residents,\n      };\n\n      setPlanetDetails(details);\n      setIsDetailsLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async function getPlanet() {\n    const planetResponse = await fetch(url);\n    const planet = await planetResponse.json();\n\n    return planet;\n  }\n\n  async function getResidentsOfPlanet(residentsUrl: string) {\n    const response = await fetch(residentsUrl);\n    const resident = await response.json();\n\n    return resident;\n  }\n\n  useEffect(() => {\n    getPlanetsAndResidents();\n  }, []);\n\n  console.log({\n    ...planetDetails,\n  });\n\n  return (\n    <div className={styles.container}>\n      {\n        isDetailsLoaded\n          ? (\n            <div className={styles.details}>\n              <div className={styles.title}>\n                {planetDetails.name}\n              </div>\n              <div className={styles.info}>\n                rotation period:\n                {' '}\n                {planetDetails.rotation_period}\n              </div>\n              <div className={styles.info}>\n                diameter:\n                {' '}\n                {planetDetails.diameter}\n              </div>\n              <div className={styles.info}>\n                climate:\n                {' '}\n                {planetDetails.climate}\n              </div>\n              <div className={styles.info}>\n                gravity:\n                {' '}\n                {planetDetails.gravity}\n              </div>\n              <div className={styles.info}>\n                terrain:\n                {' '}\n                {planetDetails.terrain}\n              </div>\n              <div className={styles.info}>\n                population:\n                {' '}\n                {planetDetails.population}\n              </div>\n              <div className={styles.residentsContainer}>\n                {planetDetails.residents.map((resident) => {\n                  const menu = (\n                    <Menu>\n                      <Menu.Item>\n                        gender:\n                        {' '}\n                        {resident.gender}\n                      </Menu.Item>\n                      <Menu.Item>\n                        height:\n                        {' '}\n                        {resident.height}\n                      </Menu.Item>\n                      <Menu.Item>\n                        mass:\n                        {' '}\n                        {resident.mass}\n                      </Menu.Item>\n                    </Menu>\n                  );\n\n                  return (\n                    <Dropdown\n                      overlay={menu}\n                      placement=\"bottomCenter\"\n                      arrow\n                    >\n                      <Button>{resident.name}</Button>\n                    </Dropdown>\n                  );\n                })}\n              </div>\n            </div>\n          )\n          : <Spin />\n      }\n    </div>\n  );\n};\n\nexport default PlanetsDetails;\n","import React, { FC } from 'react';\nimport { IFooter } from './IFooter';\n\nimport styles from './Footer.module.css';\n\nconst Footer: FC<IFooter> = (props) => {\n  const {\n    pageCounter,\n  } = props;\n  console.log('pageCounter', pageCounter);\n  return (\n    <div className={styles.container}>\n      Pages:\n      {' '}\n      {pageCounter}\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { message } from 'antd';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Planets from '../layouts/Planets/Planets';\nimport PlanetsDetails from '../layouts/PlanetDetails/PlanetsDetails';\nimport Footer from '../components/Footer/Footer';\n\nconst Routs = () => {\n  const [pageCounter, setPageCounter] = useState(0);\n\n  const [planets, setPlanets] = useState([{\n    name: '',\n    url: '',\n    climate: '',\n    population: '',\n  }]);\n\n  const [isPlanetsLoaded, setIsPlanetsLoaded] = useState(false);\n\n  async function getPlanets() {\n    try {\n      setIsPlanetsLoaded(false);\n      const response = await fetch(`http://swapi.dev/api/planets/?page=${pageCounter + 1}`);\n\n      if (response.ok) {\n        const { results } = await response.json();\n        setPlanets([...results]);\n        setPageCounter(pageCounter + 1);\n        setIsPlanetsLoaded(true);\n      }\n    } catch (err) {\n      console.error(err);\n      setIsPlanetsLoaded(true);\n    }\n  }\n\n  async function getMorePlanets() {\n    try {\n      const response = await fetch(`http://swapi.dev/api/planets/?page=${pageCounter + 1}`);\n\n      if (response.status === 404) {\n        message.error('Sorry I cannot load more pages');\n      } else if (response.ok) {\n        const { results } = await response.json();\n        if (!results) {\n          console.log('no results');\n        }\n        setPlanets([...planets, ...results]);\n        setPageCounter(pageCounter + 1);\n      }\n    } catch (err) {\n      console.log('here');\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    if (planets.length < 2) {\n      console.log('(planets.length', planets.length);\n      getPlanets();\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Footer pageCounter={pageCounter} />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Planets\n              planets={planets}\n              getMorePlanets={getMorePlanets}\n              isPlanetsLoaded={isPlanetsLoaded}\n            />\n          )}\n        />\n        <Route exact path=\"/planet/:name\" component={PlanetsDetails} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routs;\n","import React from 'react';\nimport Routs from './routs/Routs';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routs />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlanetDetails_container__Tkrx1\",\"details\":\"PlanetDetails_details__2bzSl\",\"title\":\"PlanetDetails_title__2VBby\",\"info\":\"PlanetDetails_info__2JlJV\",\"residentsContainer\":\"PlanetDetails_residentsContainer__20OJV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Planets_container__1Oe4Z\",\"listContainer\":\"Planets_listContainer__3gesr\",\"buttonContainer\":\"Planets_buttonContainer__2RDZs\",\"yodaContainer\":\"Planets_yodaContainer__2lvNb\",\"quote\":\"Planets_quote__q83Ao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3s_iO\",\"titleContainer\":\"Card_titleContainer__1hh8W\",\"content\":\"Card_content__2klsU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__3Rcpq\"};"],"sourceRoot":""}